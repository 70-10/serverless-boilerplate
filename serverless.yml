service: ${self:custom.system}-boilerplate

custom:
  system: "serverless"
  stage: ${opt:stage, self:provider.stage}
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed:
      development:
        sources:
          - table: users
            sources: [./migrate/users.json]

provider:
  name: aws
  runtime: nodejs6.10
  region: ap-northeast-1
  stage: DEV
  environment:
    NODE_ENV: ${self:custom.stage}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:Query"
        - "dynamodb:Scan"
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
        - "dynamodb:BatchWriteItem"
      Resource: "arn:aws:dynamodb:ap-northeast-1:*:table/*"

package:
  exclude:
    - .git/**
    - .nyc_output/**
    - coverage/**
    - test/**
    - package-lock.json

plugins:
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline

functions:
  GetUser:
    # handler: lib/handlers/routes/users.findById
    handler: lib/users.hello
    events:
      - http:
          method: GET
          path: users/{id}

resources:
  Resources:
    UserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: users
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: N
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
